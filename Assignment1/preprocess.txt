df = pd.DataFrame(pd.read_csv('data_for_student_case.csv'))
df.bookingdate = pd.to_datetime(df.bookingdate)
df.creationdate = pd.to_datetime(df.creationdate)
# First remove the refused transactions
df = df[df['simple_journal'] != 'Refused']

# Fill cardverificationcodesupplied NaN values with False
df.cardverificationcodesupplied.fillna(value=False, inplace=True)

def convert_currency(row):
    coversion_dict = {'SEK':0.08766,'MXN':0.04057,'AUD':0.5715,'NZD':0.5327,'GBP':1}
    currency = row['currencycode']
    amount = row['amount']
    return round(amount * coversion_dict[currency])

def fix_countrycodes(row):
    if pd.isnull(row.issuercountrycode):
        row.issuercountrycode = row.shoppercountrycode
    elif pd.isnull(row.shoppercountrycode):
        row.shoppercountrycode = row.issuercountrycode
    return row
    
def changerows(row):
    if row.txid % 50000 == 0:
        print(row)
        
    # Now we add a column to all the data containing the transacted amount in GBP. 
    row['amount_convert'] = convert_currency(row)
    
    # if countrycodes are NaN use the code of the issuer/shoppercountry 
    row = fix_countrycodes(row)
    
    # map cvc response code to 0,1,2,3
    map_cvc = {0:0, 1:1, 2:2, 3:3, 4:3, 5:3, 6:3}
    try:
        row['cvcresponsecode'] = map_cvc[row['cvcresponsecode']]
    except:
        print(row)
    # Add is_fraud column for ease of use
    row['is_fraud'] = row['simple_journal'] == 'Chargeback'
    return row

df = df.apply(changerows, axis=1)
# df['amount_convert'] = df.apply(lambda x: changerows(x), axis=1)
# df_no_refused = df_no_refused.apply(fix_countrycodes, axis=1)

df.head()